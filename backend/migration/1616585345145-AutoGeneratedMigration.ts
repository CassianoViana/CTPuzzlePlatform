import {MigrationInterface, QueryRunner} from "typeorm";

export class AutoGeneratedMigration1616585345145 implements MigrationInterface {
    name = 'AutoGeneratedMigration1616585345145'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "response_test_case" ("id" SERIAL NOT NULL, "responseInstantiation" character varying NOT NULL, "itemTestCaseId" integer, CONSTRAINT "PK_e765b4c3af4313e5bdf9bf35a48" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "item_test_case" ("id" SERIAL NOT NULL, "itemInstantiation" character varying NOT NULL, "mechanicId" integer, CONSTRAINT "PK_b58b1fcb1b2452497913b5ff778" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "refreshTokenExpires"`);
        await queryRunner.query(`COMMENT ON COLUMN "user"."confirmationCode" IS NULL`);
        await queryRunner.query(`ALTER TABLE "user" ALTER COLUMN "confirmationCode" SET DEFAULT null`);
        await queryRunner.query(`ALTER TABLE "response_test_case" ADD CONSTRAINT "FK_75b1d30bd988b5a19d91869299b" FOREIGN KEY ("itemTestCaseId") REFERENCES "item_test_case"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "item_test_case" ADD CONSTRAINT "FK_e8aa5b696720050cee512385572" FOREIGN KEY ("mechanicId") REFERENCES "mechanic"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "item_test_case" DROP CONSTRAINT "FK_e8aa5b696720050cee512385572"`);
        await queryRunner.query(`ALTER TABLE "response_test_case" DROP CONSTRAINT "FK_75b1d30bd988b5a19d91869299b"`);
        await queryRunner.query(`ALTER TABLE "user" ALTER COLUMN "confirmationCode" DROP DEFAULT`);
        await queryRunner.query(`COMMENT ON COLUMN "user"."confirmationCode" IS NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "refreshTokenExpires" character varying`);
        await queryRunner.query(`DROP TABLE "item_test_case"`);
        await queryRunner.query(`DROP TABLE "response_test_case"`);
    }

}
